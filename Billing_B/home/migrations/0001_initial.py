# Generated by Django 5.0.1 on 2024-02-23 14:14

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('pic', models.ImageField(upload_to='Customer/')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('weight_grams', models.IntegerField()),
                ('weight_milligrams', models.IntegerField()),
                ('pic', models.ImageField(upload_to='Property/')),
            ],
        ),
        migrations.CreateModel(
            name='Reciept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.TimeField(auto_now_add=True)),
                ('loan_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('intrest_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01, message='Value must be greater than or equal to 0.01'), django.core.validators.MaxValueValidator(100, message='Value must be less than or equal to 100')])),
                ('total_dues', models.IntegerField()),
                ('due_done', models.IntegerField()),
                ('due_skip', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), size=None)),
                ('pdf', models.FileField(upload_to='Receipt/')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.customer')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='home.property')),
            ],
        ),
    ]
